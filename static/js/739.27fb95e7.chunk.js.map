{"version":3,"file":"static/js/739.27fb95e7.chunk.js","mappings":"uLAEaA,E,QAAgBC,GAAAA,QAAc,mE,SCA3C,ECKoC,SAAH,GAA6B,IAAvBC,EAAQ,EAARA,SAAUC,EAAK,EAALA,MAC/C,OACE,SAACH,EAAa,WACZ,UAACI,EAAA,EAAS,WACPD,IACC,SAACE,EAAA,EAAU,CACTC,QAAQ,KACRC,GAAI,CAAEC,aAAc,OAAQC,UAAW,UAAW,SAEjDN,IAGJD,MAIT,C,oOCpBaQ,EAAmB,SAACC,GAC/B,OAAOC,EAAAA,GAAW,CAChBC,MAAOD,EAAAA,KAEJC,MAAM,GAAD,OAAIF,EAAE,iCACXG,SAAS,GAAD,OAAIH,EAAE,kCACjBI,SAAUH,EAAAA,KAAaE,SAAS,GAAD,OAAIH,EAAE,sCAEzC,E,SCMMK,EAA4B,CAChCH,MAAO,GACPE,SAAU,IAgEZ,EA7D4B,WAC1B,IAAME,GAAWC,EAAAA,EAAAA,KACXC,GAAYC,EAAAA,EAAAA,IAAYC,EAAAA,IACtBV,GAAMW,EAAAA,EAAAA,MAANX,EAEFY,GAASC,EAAAA,EAAAA,IAAU,CACvBR,cAAAA,EACAN,iBAAkBA,EAAiBC,GACnCc,SAAS,WAAD,8BAAE,WAAOC,GAAM,sEACrBT,GAASU,EAAAA,EAAAA,IAAMD,IAAQ,2CACxB,mDAFQ,KAKX,OACE,UAACE,EAAA,EAAG,CACFC,UAAU,OACVtB,GAAI,CACFuB,QAAS,OACTC,cAAe,SACfC,IAAK,OACLC,MAAO,CAAEC,GAAI,OAAQC,GAAI,SACzBC,OAAQ,SACRC,QAAS,QAEXZ,SAAUF,EAAOe,aAAa,WAE9B,SAACC,EAAA,EAAS,CACRC,GAAG,QACHC,MAAM,QACNnC,QAAQ,WACRoC,MAAOnB,EAAOG,OAAOb,MACrB8B,SAAUpB,EAAOqB,aACjBC,OAAQtB,EAAOuB,WACfC,MAAOxB,EAAOyB,QAAQnC,OAASoC,QAAQ1B,EAAO2B,OAAOrC,OACrDsC,WAAY5B,EAAOyB,QAAQnC,OAASU,EAAO2B,OAAOrC,SAEpD,SAAC0B,EAAA,EAAS,CACRC,GAAG,WACHC,MAAM,WACNW,KAAK,WACL9C,QAAQ,WACRoC,MAAOnB,EAAOG,OAAOX,SACrB4B,SAAUpB,EAAOqB,aACjBC,OAAQtB,EAAOuB,WACfC,MAAOxB,EAAOyB,QAAQjC,UAAYkC,QAAQ1B,EAAO2B,OAAOnC,UACxDoC,WAAY5B,EAAOyB,QAAQjC,UAAYQ,EAAO2B,OAAOnC,YAGvD,SAACsC,EAAA,EAAM,CAACD,KAAK,SAAS9C,QAAQ,YAAYgD,SAAUnC,EAAU,SAC3DR,EAAE,gBAEL,UAACN,EAAA,EAAU,CAACkD,MAAM,SAASjD,QAAQ,KAAKkD,GAAI,EAAE,UAC3C7C,EAAE,kBAAmB,KACtB,SAAC,KAAI,CAAC8C,MAAO,CAAEC,MAAO,UAAWC,WAAY,KAAOC,GAAI,YAAY,SACjEjD,EAAE,uBAKb,EC/EA,ICAA,ECEkB,WAChB,OACE,SAACkD,EAAA,EAAO,WACN,SAAC,EAAS,KAGhB,C","sources":["components/Section/Section.styled.ts","components/Section/index.ts","components/Section/Section.tsx","pages/LoginPage/LoginForm/loginSchema.ts","pages/LoginPage/LoginForm/LoginForm.tsx","pages/LoginPage/LoginForm/index.ts","pages/LoginPage/index.ts","pages/LoginPage/LoginPage.tsx"],"sourcesContent":["import styled from \"styled-components\"\n\nexport const SectionStyled = styled.section`\n  padding: 100px 0;\n  min-height: 100vh;\n`\n","import Section from \"./Section\"\n\nexport default Section\n","import { Container, Typography } from \"@mui/material\"\nimport React, { ReactNode } from \"react\"\nimport { SectionStyled } from \"./Section.styled\"\ninterface ISection {\n  children: ReactNode\n  title?: string\n}\nconst Section: React.FC<ISection> = ({ children, title }) => {\n  return (\n    <SectionStyled>\n      <Container>\n        {title && (\n          <Typography\n            variant='h2'\n            sx={{ marginBottom: \"20px\", textAlign: \"center\" }}\n          >\n            {title}\n          </Typography>\n        )}\n        {children}\n      </Container>\n    </SectionStyled>\n  )\n}\n\nexport default Section\n","import { TFunction } from \"i18next\"\nimport * as yup from \"yup\"\n\nexport const validationSchema = (t: TFunction<\"translation\", undefined>) => {\n  return yup.object({\n    email: yup\n      .string()\n      .email(`${t(\"loginpage.yup.email.invalid\")}`)\n      .required(`${t(\"loginpage.yup.email.required\")}`),\n    password: yup.string().required(`${t(\"loginpage.yup.password.required\")}`),\n  })\n}\n","import { Box, Button, TextField, Typography } from \"@mui/material\"\nimport { useFormik } from \"formik\"\nimport React from \"react\"\nimport { useTranslation } from \"react-i18next\"\nimport { useSelector } from \"react-redux\"\nimport { Link } from \"react-router-dom\"\n\nimport { useAppDispatch } from \"../../../hooks/useReduxWithType\"\nimport { login } from \"../../../redux/auth/authOperations\"\nimport { selectLoading } from \"../../../redux/auth/authSelectors\"\nimport { validationSchema } from \"./loginSchema\"\n\ninterface FormValues {\n  email: string\n  password: string\n}\n\nconst initialValues: FormValues = {\n  email: \"\",\n  password: \"\",\n}\n\nconst LoginForm: React.FC = () => {\n  const dispatch = useAppDispatch()\n  const isLoading = useSelector(selectLoading)\n  const { t } = useTranslation()\n\n  const formik = useFormik({\n    initialValues,\n    validationSchema: validationSchema(t),\n    onSubmit: async (values) => {\n      dispatch(login(values))\n    },\n  })\n\n  return (\n    <Box\n      component='form'\n      sx={{\n        display: \"flex\",\n        flexDirection: \"column\",\n        gap: \"20px\",\n        width: { xs: \"100%\", sm: \"608px\" },\n        margin: \"0 auto\",\n        padding: \"20px\",\n      }}\n      onSubmit={formik.handleSubmit}\n    >\n      <TextField\n        id='email'\n        label='Email'\n        variant='outlined'\n        value={formik.values.email}\n        onChange={formik.handleChange}\n        onBlur={formik.handleBlur}\n        error={formik.touched.email && Boolean(formik.errors.email)}\n        helperText={formik.touched.email && formik.errors.email}\n      />\n      <TextField\n        id='password'\n        label='Password'\n        type='password'\n        variant='outlined'\n        value={formik.values.password}\n        onChange={formik.handleChange}\n        onBlur={formik.handleBlur}\n        error={formik.touched.password && Boolean(formik.errors.password)}\n        helperText={formik.touched.password && formik.errors.password}\n      />\n\n      <Button type='submit' variant='contained' disabled={isLoading}>\n        {t(\"btn.login\")}\n      </Button>\n      <Typography align='center' variant='h5' mt={2}>\n        {t(\"loginpage.desk\")}{\" \"}\n        <Link style={{ color: \"#272343\", fontWeight: 700 }} to={\"/register\"}>\n          {t(\"btn.register\")}\n        </Link>\n      </Typography>\n    </Box>\n  )\n}\n\nexport default LoginForm\n","import LoginForm from \"./LoginForm\"\n\nexport default LoginForm\n","import LoginPage from \"./LoginPage\"\n\nexport default LoginPage\n","import React from \"react\"\nimport Section from \"../../components/Section\"\nimport LoginForm from \"./LoginForm\"\n\nconst LoginPage = () => {\n  return (\n    <Section>\n      <LoginForm />\n    </Section>\n  )\n}\n\nexport default LoginPage\n"],"names":["SectionStyled","styled","children","title","Container","Typography","variant","sx","marginBottom","textAlign","validationSchema","t","yup","email","required","password","initialValues","dispatch","useAppDispatch","isLoading","useSelector","selectLoading","useTranslation","formik","useFormik","onSubmit","values","login","Box","component","display","flexDirection","gap","width","xs","sm","margin","padding","handleSubmit","TextField","id","label","value","onChange","handleChange","onBlur","handleBlur","error","touched","Boolean","errors","helperText","type","Button","disabled","align","mt","style","color","fontWeight","to","Section"],"sourceRoot":""}