{"version":3,"file":"static/js/248.043824da.chunk.js","mappings":"uLAEaA,E,QAAgBC,GAAAA,QAAc,6C,SCA3C,ECKoC,SAAH,GAA6B,IAAvBC,EAAQ,EAARA,SAAUC,EAAK,EAALA,MAC/C,OACE,SAACH,EAAa,WACZ,UAACI,EAAA,EAAS,WACPD,IACC,SAACE,EAAA,EAAU,CACTC,QAAQ,KACRC,GAAI,CAAEC,aAAc,OAAQC,UAAW,UAAW,SAEjDN,IAGJD,MAIT,C,qLClBMQ,EAAmBC,EAAAA,GAAW,CAClCC,MAAOD,EAAAA,KAAaC,MAAM,iBAAiBC,SAAS,qBACpDC,SAAUH,EAAAA,KAAaE,SAAS,0BAQ5BE,EAA4B,CAChCH,MAAO,GACPE,SAAU,IAyDZ,EAtD4B,WAC1B,OAAwCE,EAAAA,EAAAA,WAAS,GAAM,eAAhDC,EAAY,KAAEC,EAAe,KAC9BC,GAASC,EAAAA,EAAAA,IAAU,CACvBL,cAAAA,EACAL,iBAAAA,EACAW,SAAS,WAAD,8BAAE,WAAOC,GAAM,sEACrBJ,GAAgB,GAEhBK,QAAQC,IAAI,eAAgBF,GAC5BJ,GAAgB,GAAM,2CACvB,mDALQ,KAQX,OACE,UAACO,EAAA,EAAG,CACFC,UAAU,OACVnB,GAAI,CACFoB,QAAS,OACTC,cAAe,SACfC,IAAK,OACLC,MAAO,QACPC,OAAQ,SACRC,QAAS,QAEXX,SAAUF,EAAOc,aAAa,WAE9B,SAACC,EAAA,EAAS,CACRC,GAAG,QACHC,MAAM,QACN9B,QAAQ,WACR+B,MAAOlB,EAAOG,OAAOV,MACrB0B,SAAUnB,EAAOoB,aACjBC,OAAQrB,EAAOsB,WACfC,MAAOvB,EAAOwB,QAAQ/B,OAASgC,QAAQzB,EAAO0B,OAAOjC,OACrDkC,WAAY3B,EAAOwB,QAAQ/B,OAASO,EAAO0B,OAAOjC,SAEpD,SAACsB,EAAA,EAAS,CACRC,GAAG,WACHC,MAAM,WACNW,KAAK,WACLzC,QAAQ,WACR+B,MAAOlB,EAAOG,OAAOR,SACrBwB,SAAUnB,EAAOoB,aACjBC,OAAQrB,EAAOsB,WACfC,MAAOvB,EAAOwB,QAAQ7B,UAAY8B,QAAQzB,EAAO0B,OAAO/B,UACxDgC,WAAY3B,EAAOwB,QAAQ7B,UAAYK,EAAO0B,OAAO/B,YAEvD,SAACkC,EAAA,EAAM,CAACD,KAAK,SAASzC,QAAQ,YAAY2C,SAAUhC,EAAa,SAAC,YAKxE,ECtEA,ICAA,ECEkB,WAChB,OACE,SAACiC,EAAA,EAAO,WACN,SAAC,EAAS,KAGhB,C","sources":["components/Section/Section.styled.ts","components/Section/index.ts","components/Section/Section.tsx","pages/LoginPage/LoginForm/LoginForm.tsx","pages/LoginPage/LoginForm/index.ts","pages/LoginPage/index.ts","pages/LoginPage/LoginPage.tsx"],"sourcesContent":["import styled from 'styled-components'\n\nexport const SectionStyled = styled.section`\n  padding: 100px 0;\n`\n","import Section from './Section'\n\nexport default Section\n","import { Container, Typography } from '@mui/material'\nimport React, { ReactNode } from 'react'\nimport { SectionStyled } from './Section.styled'\ninterface ISection {\n  children: ReactNode\n  title?: string\n}\nconst Section: React.FC<ISection> = ({ children, title }) => {\n  return (\n    <SectionStyled>\n      <Container>\n        {title && (\n          <Typography\n            variant='h2'\n            sx={{ marginBottom: '20px', textAlign: 'center' }}\n          >\n            {title}\n          </Typography>\n        )}\n        {children}\n      </Container>\n    </SectionStyled>\n  )\n}\n\nexport default Section\n","import React, { useState } from 'react'\nimport { TextField, Button, Box } from '@mui/material'\nimport { useFormik } from 'formik'\nimport * as yup from 'yup'\n\nconst validationSchema = yup.object({\n  email: yup.string().email('Invalid email').required('Email is required'),\n  password: yup.string().required('Password is required'),\n})\n\ninterface FormValues {\n  email: string\n  password: string\n}\n\nconst initialValues: FormValues = {\n  email: '',\n  password: '',\n}\n\nconst LoginForm: React.FC = () => {\n  const [isSubmitting, setIsSubmitting] = useState(false)\n  const formik = useFormik({\n    initialValues,\n    validationSchema,\n    onSubmit: async (values) => {\n      setIsSubmitting(true)\n      // Submit the form data to the server here\n      console.log('Form values:', values)\n      setIsSubmitting(false)\n    },\n  })\n\n  return (\n    <Box\n      component='form'\n      sx={{\n        display: 'flex',\n        flexDirection: 'column',\n        gap: '20px',\n        width: '608px',\n        margin: '0 auto',\n        padding: '20px',\n      }}\n      onSubmit={formik.handleSubmit}\n    >\n      <TextField\n        id='email'\n        label='Email'\n        variant='outlined'\n        value={formik.values.email}\n        onChange={formik.handleChange}\n        onBlur={formik.handleBlur}\n        error={formik.touched.email && Boolean(formik.errors.email)}\n        helperText={formik.touched.email && formik.errors.email}\n      />\n      <TextField\n        id='password'\n        label='Password'\n        type='password'\n        variant='outlined'\n        value={formik.values.password}\n        onChange={formik.handleChange}\n        onBlur={formik.handleBlur}\n        error={formik.touched.password && Boolean(formik.errors.password)}\n        helperText={formik.touched.password && formik.errors.password}\n      />\n      <Button type='submit' variant='contained' disabled={isSubmitting}>\n        Login\n      </Button>\n    </Box>\n  )\n}\n\nexport default LoginForm\n","import LoginForm from './LoginForm'\n\nexport default LoginForm\n","import LoginPage from './LoginPage'\n\nexport default LoginPage\n","import React from 'react'\nimport Section from '../../components/Section'\nimport LoginForm from './LoginForm'\n\nconst LoginPage = () => {\n  return (\n    <Section>\n      <LoginForm />\n    </Section>\n  )\n}\n\nexport default LoginPage\n"],"names":["SectionStyled","styled","children","title","Container","Typography","variant","sx","marginBottom","textAlign","validationSchema","yup","email","required","password","initialValues","useState","isSubmitting","setIsSubmitting","formik","useFormik","onSubmit","values","console","log","Box","component","display","flexDirection","gap","width","margin","padding","handleSubmit","TextField","id","label","value","onChange","handleChange","onBlur","handleBlur","error","touched","Boolean","errors","helperText","type","Button","disabled","Section"],"sourceRoot":""}